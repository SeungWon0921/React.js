React란
- 페이스북사에서 만든 자바스크립트 라이브러리(프레임워크)
- 페이스북에서 자체적으로 사용, 많은 웹 어플리케이션에 적용
- 유저 인터페이스를 만드는 라이브러리
- View 레이어를 담당
- vue.js, angular.js
- React(웹 어플리케이션), React Native(모바일 어플리케이션), React Electron(PC 어플리케이션)

MVC 패턴
- Model, View, Controller
- Model : Data를 담당
- View : UI를 담당
- Controller : Logic을 담당

리액트의 특징
- 컴퍼넌트로 이루어진 UI 라이브러리
- 리액트 어플리케이션은 꼭 하나이상의 컴퍼넌트로 이루어져 있음
- 최상위 컴퍼넌트는 ROOT
- Virtual DOM Tree를 가지고 있음


state : 데이터의 상태를 나타내는 객체
render : 사용자에게 어떻게 표시될 것인지를 나타내는 함수

                import React from 'react'

                class LikeButton extends Component {
                    state = {
                        numberOfLikes: 0,
                    };
                    
                    render() {
                        return <button>
                            {this.state.numberOfLikes}
                        <button>;
                    }
                }
                export default LikeButton;


✔ Component(컴퍼넌트)
한 가지의 기능을 수행하는 UI 단위


리액트 공식 사이트
https://reactjs.org/docs/getting-started.html


리액트를 위한 툴
1. 터미널
    cmder
    https://cmder.net/

2. node
    자바스크립트를 실행할 수 있는 환경
    https://nodejs.org/ko/

3. 브라우저(크롬)
    React Developer Tools

4. 비주얼스튜디오 코드
    Reactjs code snippets


리액트의 시작
1. cdn을 이용하는 방법
    - 구글에서 react cdn으로 검색
        <script crossorigin src="https://unpkg.com/react@17/umd/react.production.min.js"></script>
        <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.production.min.js"></script>
    - babel : 과거 브라우저에 맞도록 스크립트를 자동으로 변환(트랜스 컴파일러)
        <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>

2. create-react-app(cra)
    - 페이스북에서 만든 리액트를 개발하는 개발자들이 공통적으로 사용하는 유용한 툴을 한번에 자동으로 설치할 수 있게 해주는 툴


🎁 yarn
    - facebook이 만든 javascript의 의존성 관리 패키지 매니저
    - npm과 유사(npm을 base한 프로그램)
    - 속도 향상, 보안, 신뢰성
    - npm i -g yarn
    - yarn -v


yarn create react-app 프로젝트명(대문자X)
yarn create react-app testproject


리액트 프로젝트 구조
- .gitignore : gitignore 파일안에 기술한 파일들은 github에 푸시하지 않음
- package.json : npm에서 버전을 관리할 때 프로젝트에서 외부적으로 쓰고 있는 라이브러리 버전들과 스크립트들을 명시
- README.md : github에서 프로젝트에 대해 설명하는 파일
- public 디렉토리 : 사용자에게 배포할 때 외부적으로 보여지는 리소스들을 포함
- src 디렉토리 : 리액트 소스들을 포함

cd testproject
yarn start

리액트의 컴퍼넌트
- 리액트에서 레고 조각처럼 조합하여 프로그래밍 할 수 있도록 만든 모듈단위
- 클래스, 함수(state가 존재하지 않음 -> 정적인 페이지)
- 함수형 컴퍼넌트(v 16.8) 부터 Hook이 제공

예제>
    yarn create react-app ex1


JSX 태그
- facebook에서 만든 마크업
- JSX -> javascript로 변환
- 태그는 꼭 닫아야 함
- 두개 이상의 태그는 하나의 태그로 감싸져야 함 -> 프레그먼트 태그를 사용할 수 있음

    <div>
        <div>김사과</div>
        <div>반하나</div>
        <div>오렌지</div>
    </div>

    또는
    <>
        <div>김사과</div>
        <div>반하나</div>
        <div>오렌지</div>
    </>
- 주석은 {/* */} 표현
- css 속성은 카멜케이스 표기법
     background-color -> backgroundColor


props(properties)
- 컴퍼넌트에 매개변수를 전달

    <컴퍼넌트명 속성="값"></컴퍼넌트명>

    function 컴퍼넌트명(props){
        return
            <div>{props.속성}</div>
    }


✔ 삼항연산자를 사용하여 조건부 렌더링
    - 조건식이 true인 경우와 false인 경우를 모두 표현
        { 조건식 ? true인경우 : false인경우 }
    - 조건식이 true인 경우만 표현
        { 조건식 && true인경우 }


defaultProps
- 컴퍼넌트에 props를 지정하지 않았을 때 기본값을 설정

    컴퍼넌트명.defaultProps = {
        설정할 프로퍼티
        ...
    }


props.children
- 컴퍼넌트 태그 사이에 넣은 값을 조회

    <컴퍼넌트명>
        <하위 컴퍼넌트/>
    </컴퍼넌트명>

    function 컴퍼넌트명({ children }){
        return(
            <div>
                {children}
            </div>
        )
    }


✔ 비구조화 할당
- 객체 안에 있는 값을 추출해서 변수 혹은 상수에 저장

    const student = {'apple':'김사과', 'banana':'반하나', 'orange':'오렌지'};
                     ------- -------
                       key    value
    
    const { apple, banana, orange } = student;
    








