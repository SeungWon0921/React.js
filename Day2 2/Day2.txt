useState 함수
- 컴퍼넌트에서 동적인 값의 상태(state)를 다루는 hook 함수

    const [현재상태변수, 설정함수] = useState(초기값);
    const [number, setNumber] = useState(0);

✔ hook 함수
상태관리를 다루던 클래스(컴퍼넌트)를 좀 더 쉽게 함수형(컴퍼넌트)에서 다룰 수 있도록 만들어진 함수


🎁 크롬에 React Developer Tools 설치

spread
- 객체 또는 배열을 펼쳐 저장하는 방법

    const dog = {
        name: '루시'
    };

    const cuteDog = {
        ...dog,
        age: 10
    }

    const whiteCuteDog = {
        ...cuteDog,
        color: 'white'
    }


✔ 리액트 상태에서 객체 수정하기
        
        const { value, name } = e.target;
        setUsers({
            ...users,
            [name]: value
        });

        - 리액트에서는 상태값의 불변성을 지켜줘야 함
        - 리액트 컴퍼넌트에서 상태가 업데이트 되었음을 감지할 수 있음 -> 메모리의 주소가 변동

    * 리액트에서 객체를 업데이트 할 때는 기본 객체를 직접 수정하면 안되고, 새로운 객체를 만들어서 새 객체에 변화를 줘야 함 -> 랜더링


useRef 함수
- 특정 엘리먼트에 접근하거나 스크롤바 위치를 설정할 때
- 외부 라이브러리 사용할 때
- setTimeout, setInterval을 통해서 만들어진 id

    useRef() 객체를 생성 -> 가상 DOM에 ref 값을 설정
    current : 가상 DOM을 가리킴


JSX 참조
https://reactjs.org/docs/introducing-jsx.html
https://ko.reactjs.org/docs/introducing-jsx.html (한국어)


배열

const apple = {
    idx: 1,
    userid: 'apple',
    name: '김사과'
}

const member = [
    {
        idx: 1,
        userid: 'apple',
        name: '김사과'
    },
    {
        idx: 2,
        userid: 'banana',
        name: '반하나'
    }   
    ...
]

